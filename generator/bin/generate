#!/usr/bin/php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\DependencyInjection\Loader\YamlFileLoader;
use Ptcorpus\RelatedArticles;

$container 		= new ContainerBuilder();
$container->setParameter('base_path', __DIR__.'/../');
$loader 		= new YamlFileLoader($container, new FileLocator(array(__DIR__ . '/../src')));

$loader->load('services.yml');

$file = $argv[1];
$destination = $argv[2];

if (!is_dir($destination)) {
	throw new Exception("$destination must be a directory");
}

$renderer = $container->get('ptcorpus.renderer');
$pages = $renderer->render($file);

foreach ($pages as $page) {
	$page['keywords'] = implode(', ', $page['keywords']);
	$path = rtrim($destination, '/') . '/1970-01-01-' . $page['url'];
	file_put_contents($path, <<<CONTENT
---
title: {$page['title']}
keywords: {$page['keywords']}
description: {$page['description']}
layout: post
---

{$page['content']}
CONTENT
	);
}

$directory = new RecursiveDirectoryIterator($destination);
$iterator = new RecursiveIteratorIterator($directory);
$htmlFiles = new RegexIterator($iterator, '/^.+\.html$/i');
$relatedArticles = new RelatedArticles;

foreach ($htmlFiles as $htmlFile)
{
	$path = realpath($htmlFile->getPathName());
	$relatedArticles->addPage($path);
}

foreach ($htmlFiles as $htmlFile)
{
	$path = realpath($htmlFile->getPathName());
	$relatedArticlesHtml = $relatedArticles->getRelatedArticles($path, 3);
	$content = file_get_contents($path);

	$content = preg_replace(
		'/(\<\!\-\-RELATED).*?(RELATED\-\-\>)/s',
		'$1 -->' . $relatedArticlesHtml . '<!-- $2',
		$content
	);

	file_put_contents($path, $content);
}